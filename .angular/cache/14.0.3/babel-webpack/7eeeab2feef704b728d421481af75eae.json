{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/User/Desktop/angular-canvasjs-chart-samples/angular-canvasjs-chart-samples/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@canvasjs/angular-stockcharts\";\n\nconst _c0 = function () {\n  return {\n    width: \"100%\",\n    height: \"360px\"\n  };\n};\n\nexport class ZoomableChartComponent {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.chartOptions = {\n      zoomEnabled: true,\n      animationEnabled: true,\n      exportEnabled: true,\n      theme: 'light2',\n      title: {\n        text: 'Try Zooming & Panning'\n      },\n      data: [{\n        type: 'line',\n        dataPoints: [] // Initialize with an empty array\n\n      }]\n    };\n  }\n\n  ngOnInit() {\n    this.fetchChartData(); // Call fetchChartData here\n  }\n\n  fetchChartData() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        const response = yield _this.httpClient.get('https://localhost:7054/Ram').toPromise(); // Assuming the API response is an array of data objects with a 'size' property\n\n        const dps = response.map(item => ({\n          y: item.size\n        })); // Update the chart data with the fetched data in 'dps' format\n\n        _this.chartOptions.data[0].dataPoints = dps; // Log the updated dataPoints\n\n        console.log(_this.chartOptions.data[0].dataPoints);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    })();\n  }\n\n}\n\nZoomableChartComponent.ɵfac = function ZoomableChartComponent_Factory(t) {\n  return new (t || ZoomableChartComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\n\nZoomableChartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ZoomableChartComponent,\n  selectors: [[\"app-zoom-pan\"]],\n  decls: 2,\n  vars: 3,\n  consts: [[3, \"options\", \"styles\"]],\n  template: function ZoomableChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵelement(1, \"canvasjs-chart\", 0);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"options\", ctx.chartOptions)(\"styles\", i0.ɵɵpureFunction0(2, _c0));\n    }\n  },\n  dependencies: [i2.CanvasJSChart],\n  encapsulation: 2\n});\n``;","map":{"version":3,"mappings":";;;;;;;;;;;;AAOA,OAAM,MAAOA,sBAAP,CAA6B;EAC/BC,YAAoBC,UAApB,EAA0C;IAAtB;IAEpB,oBAAe;MACXC,WAAW,EAAE,IADF;MAEXC,gBAAgB,EAAE,IAFP;MAGXC,aAAa,EAAE,IAHJ;MAIXC,KAAK,EAAE,QAJI;MAKXC,KAAK,EAAE;QACHC,IAAI,EAAE;MADH,CALI;MAQXC,IAAI,EAAE,CACF;QACIC,IAAI,EAAE,MADV;QAEIC,UAAU,EAAE,EAFhB,CAEoB;;MAFpB,CADE;IARK,CAAf;EAF8C;;EAkB9CC,QAAQ;IACJ,KAAKC,cAAL,GADI,CACmB;EAC1B;;EAEKA,cAAc;IAAA;;IAAA;MAChB,IAAI;QACA,MAAMC,QAAQ,SAAc,KAAI,CAACZ,UAAL,CACvBa,GADuB,CACnB,4BADmB,EAEvBC,SAFuB,EAA5B,CADA,CAKA;;QACA,MAAMC,GAAG,GAAGH,QAAQ,CAACI,GAAT,CAAcC,IAAD,KAAgB;UACrCC,CAAC,EAAED,IAAI,CAACE;QAD6B,CAAhB,CAAb,CAAZ,CANA,CAUA;;QACA,KAAI,CAACC,YAAL,CAAkBb,IAAlB,CAAuB,CAAvB,EAA0BE,UAA1B,GAAuCM,GAAvC,CAXA,CAaA;;QACAM,OAAO,CAACC,GAAR,CAAY,KAAI,CAACF,YAAL,CAAkBb,IAAlB,CAAuB,CAAvB,EAA0BE,UAAtC;MACH,CAfD,CAeE,OAAOc,KAAP,EAAc;QACZF,OAAO,CAACE,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;MACH;IAlBe;EAmBnB;;AA1C8B;;;mBAAtBzB,wBAAsB0B;AAAA;;;QAAtB1B;EAAsB2B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCPnCL;MACCA;MACDA;;;;MADiBA;MAAAA,2CAAwB,QAAxB,EAAwBA,0BAAxB;;;;;;ADkDjB","names":["ZoomableChartComponent","constructor","httpClient","zoomEnabled","animationEnabled","exportEnabled","theme","title","text","data","type","dataPoints","ngOnInit","fetchChartData","response","get","toPromise","dps","map","item","y","size","chartOptions","console","log","error","i0","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\angular-canvasjs-chart-samples\\angular-canvasjs-chart-samples\\src\\app\\components\\key-features\\zoompan.chart.component.ts","C:\\Users\\User\\Desktop\\angular-canvasjs-chart-samples\\angular-canvasjs-chart-samples\\src\\app\\components\\key-features\\chart.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n    selector: 'app-zoom-pan',\n    templateUrl: 'chart.component.html',\n})\nexport class ZoomableChartComponent implements OnInit {\n    constructor(private httpClient: HttpClient) {}\n\n    chartOptions = {\n        zoomEnabled: true,\n        animationEnabled: true,\n        exportEnabled: true,\n        theme: 'light2',\n        title: {\n            text: 'Try Zooming & Panning',\n        },\n        data: [\n            {\n                type: 'line',\n                dataPoints: [], // Initialize with an empty array\n            },\n        ],\n    };\n\n    ngOnInit() {\n        this.fetchChartData(); // Call fetchChartData here\n    }\n\n    async fetchChartData() {\n        try {\n            const response: any = await this.httpClient\n                .get('https://localhost:7054/Ram')\n                .toPromise();\n\n            // Assuming the API response is an array of data objects with a 'size' property\n            const dps = response.map((item: any) => ({\n                y: item.size,\n            }));\n\n            // Update the chart data with the fetched data in 'dps' format\n            this.chartOptions.data[0].dataPoints = dps;\n\n            // Log the updated dataPoints\n            console.log(this.chartOptions.data[0].dataPoints);\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    }\n}\n``\n","<div>\r\n\t<canvasjs-chart [options]=\"chartOptions\" [styles]=\"{width: '100%', height:'360px'}\"></canvasjs-chart>\r\n</div>"]},"metadata":{},"sourceType":"module"}