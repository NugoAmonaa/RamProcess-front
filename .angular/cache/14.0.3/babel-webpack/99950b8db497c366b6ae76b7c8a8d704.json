{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/User/Desktop/angular-canvasjs-chart-samples/angular-canvasjs-chart-samples/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@canvasjs/angular-stockcharts\";\n\nconst _c0 = function () {\n  return {\n    width: \"100%\",\n    height: \"360px\"\n  };\n};\n\nexport class ZoomableChartComponent {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n\n    this.generateRandomData = () => {\n      var y = 1000,\n          dps = [];\n\n      for (var i = 0; i < 100; i++) {\n        y += Math.round(Math.random() * 10 - 5);\n        dps.push({\n          y: y\n        });\n      }\n\n      return dps;\n    };\n\n    this.chartOptions = {\n      zoomEnabled: true,\n      animationEnabled: true,\n      exportEnabled: true,\n      theme: 'light2',\n      title: {\n        text: 'Try Zooming & Panning'\n      },\n      data: [{\n        type: 'line',\n        dataPoints: this.generateRandomData()\n      }]\n    };\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.fetchChartData();\n    })();\n  }\n\n  fetchChartData() {\n    console.log(this.chartOptions.data[0].dataPoints);\n    let xValue = 1; // Replace 'YOUR_API_ENDPOINT' with the actual API endpoint you want to fetch data from\n\n    this.httpClient.get('https://localhost:7054/Ram').subscribe(response => {\n      this.chartOptions.data[0].dataPoints = response.map(item => ({\n        y: item.size,\n        x: item.size\n      })); // Log the updated dataPoints inside the subscription block\n    });\n  }\n\n}\n\nZoomableChartComponent.ɵfac = function ZoomableChartComponent_Factory(t) {\n  return new (t || ZoomableChartComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n};\n\nZoomableChartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ZoomableChartComponent,\n  selectors: [[\"app-zoom-pan\"]],\n  decls: 2,\n  vars: 3,\n  consts: [[3, \"options\", \"styles\"]],\n  template: function ZoomableChartComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵelement(1, \"canvasjs-chart\", 0);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"options\", ctx.chartOptions)(\"styles\", i0.ɵɵpureFunction0(2, _c0));\n    }\n  },\n  dependencies: [i2.CanvasJSChart],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;;;;;;;AAOA,OAAM,MAAOA,sBAAP,CAA6B;EAC/BC,YAAoBC,UAApB,EAA0C;IAAtB;;IAKpB,0BAAqB,MAAK;MACtB,IAAIC,CAAC,GAAG,IAAR;MAAA,IAAcC,GAAG,GAAG,EAApB;;MACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;QAC1BF,CAAC,IAAIG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAAhB,GAAqB,CAAhC,CAAL;QACAJ,GAAG,CAACK,IAAJ,CAAS;UAACN,CAAC,EAAEA;QAAJ,CAAT;MACH;;MACD,OAAOC,GAAP;IACH,CAPD;;IAQA,oBAAe;MACXM,WAAW,EAAE,IADF;MAEXC,gBAAgB,EAAE,IAFP;MAGXC,aAAa,EAAE,IAHJ;MAIXC,KAAK,EAAE,QAJI;MAKXC,KAAK,EAAE;QACHC,IAAI,EAAE;MADH,CALI;MAQXC,IAAI,EAAE,CACF;QACIC,IAAI,EAAE,MADV;QAEIC,UAAU,EAAE,KAAKC,kBAAL;MAFhB,CADE;IARK,CAAf;EAb8C;;EAExCC,QAAQ;IAAA;;IAAA;MACV,MAAM,KAAI,CAACC,cAAL,EAAN;IADU;EAEb;;EAyBAA,cAAc;IACRC,OAAO,CAACC,GAAR,CAAY,KAAKC,YAAL,CAAkBR,IAAlB,CAAuB,CAAvB,EAA0BE,UAAtC;IACF,IAAIO,MAAM,GAAG,CAAb,CAFU,CAIV;;IACA,KAAKvB,UAAL,CAAgBwB,GAAhB,CAAoB,4BAApB,EAAkDC,SAAlD,CAA6DC,QAAD,IAAkB;MAE1E,KAAKJ,YAAL,CAAkBR,IAAlB,CAAuB,CAAvB,EAA0BE,UAA1B,GAAuCU,QAAQ,CAACC,GAAT,CAAcC,IAAD,KAAgB;QAChE3B,CAAC,EAAE2B,IAAI,CAACC,IADwD;QAEhEC,CAAC,EAAEF,IAAI,CAACC;MAFwD,CAAhB,CAAb,CAAvC,CAF0E,CAO1E;IACH,CARD;EASH;;AA5C6B;;;mBAAtB/B,wBAAsBiC;AAAA;;;QAAtBjC;EAAsBkC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCPnCL;MACCA;MACDA;;;;MADiBA;MAAAA,2CAAwB,QAAxB,EAAwBA,0BAAxB","names":["ZoomableChartComponent","constructor","httpClient","y","dps","i","Math","round","random","push","zoomEnabled","animationEnabled","exportEnabled","theme","title","text","data","type","dataPoints","generateRandomData","ngOnInit","fetchChartData","console","log","chartOptions","xValue","get","subscribe","response","map","item","size","x","i0","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\User\\Desktop\\angular-canvasjs-chart-samples\\angular-canvasjs-chart-samples\\src\\app\\components\\key-features\\zoompan.chart.component.ts","C:\\Users\\User\\Desktop\\angular-canvasjs-chart-samples\\angular-canvasjs-chart-samples\\src\\app\\components\\key-features\\chart.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n    selector: 'app-zoom-pan',\n    templateUrl: 'chart.component.html',\n})\nexport class ZoomableChartComponent implements OnInit {\n    constructor(private httpClient: HttpClient) {}\n\n    async ngOnInit() {\n        await this.fetchChartData();\n    }\n    generateRandomData = () => {\n        var y = 1000, dps = [];\n        for (var i = 0; i < 100; i++) {\n            y += Math.round(Math.random() * 10 - 5);\n            dps.push({y: y});\n        }\n        return dps;\n    }\n    chartOptions = {\n        zoomEnabled: true,\n        animationEnabled: true,\n        exportEnabled: true,\n        theme: 'light2',\n        title: {\n            text: 'Try Zooming & Panning',\n        },\n        data: [\n            {\n                type: 'line',\n                dataPoints: this.generateRandomData(),\n            },\n        ],\n    };\n\n     fetchChartData() {\n           console.log(this.chartOptions.data[0].dataPoints);\n         let xValue = 1;\n\n         // Replace 'YOUR_API_ENDPOINT' with the actual API endpoint you want to fetch data from\n         this.httpClient.get('https://localhost:7054/Ram').subscribe((response: any) => {\n\n             this.chartOptions.data[0].dataPoints = response.map((item: any) => ({\n                 y: item.size,\n                 x: item.size\n             }));\n\n             // Log the updated dataPoints inside the subscription block\n         });\n     }\n}\n","<div>\r\n\t<canvasjs-chart [options]=\"chartOptions\" [styles]=\"{width: '100%', height:'360px'}\"></canvasjs-chart>\r\n</div>"]},"metadata":{},"sourceType":"module"}